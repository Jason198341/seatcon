/* 
============================================
CONFERENCE CHAT APPLICATION - ANIMATIONS
============================================
세련되고 부드러운 애니메이션 및 전환 효과를 정의합니다.
사용자 경험을 향상시키고 프리미엄 느낌을 제공합니다.
*/

/* ======= 기본 전환 애니메이션 ======= */

/* 페이드 인/아웃 애니메이션 */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

.fade-in {
  animation: fadeIn var(--duration-300) var(--ease-out) forwards;
}

.fade-out {
  animation: fadeOut var(--duration-200) var(--ease-in) forwards;
}

/* 슬라이드 애니메이션 */
@keyframes slideInRight {
  from { transform: translateX(100%); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes slideOutRight {
  from { transform: translateX(0); opacity: 1; }
  to { transform: translateX(100%); opacity: 0; }
}

@keyframes slideInLeft {
  from { transform: translateX(-100%); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes slideOutLeft {
  from { transform: translateX(0); opacity: 1; }
  to { transform: translateX(-100%); opacity: 0; }
}

@keyframes slideInUp {
  from { transform: translateY(100%); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes slideOutDown {
  from { transform: translateY(0); opacity: 1; }
  to { transform: translateY(100%); opacity: 0; }
}

.slide-in-right {
  animation: slideInRight var(--duration-300) var(--ease-out) forwards;
}

.slide-out-right {
  animation: slideOutRight var(--duration-250) var(--ease-in) forwards;
}

.slide-in-left {
  animation: slideInLeft var(--duration-300) var(--ease-out) forwards;
}

.slide-out-left {
  animation: slideOutLeft var(--duration-250) var(--ease-in) forwards;
}

.slide-in-up {
  animation: slideInUp var(--duration-300) var(--ease-out) forwards;
}

.slide-out-down {
  animation: slideOutDown var(--duration-250) var(--ease-in) forwards;
}

/* 확대/축소 애니메이션 */
@keyframes zoomIn {
  from { transform: scale(0.8); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

@keyframes zoomOut {
  from { transform: scale(1); opacity: 1; }
  to { transform: scale(0.8); opacity: 0; }
}

.zoom-in {
  animation: zoomIn var(--duration-300) var(--ease-out) forwards;
}

.zoom-out {
  animation: zoomOut var(--duration-200) var(--ease-in) forwards;
}

/* ======= 스크린 전환 애니메이션 ======= */

/* 스크린 전환 - 미끄러지듯 부드럽게 */
.screen-transition-enter {
  position: absolute;
  width: 100%;
  transform: translateX(100%);
  opacity: 0;
}

.screen-transition-enter-active {
  transform: translateX(0);
  opacity: 1;
  transition: transform var(--screen-transition-duration) var(--screen-transition-timing),
              opacity var(--screen-transition-duration) var(--screen-transition-timing);
}

.screen-transition-exit {
  position: absolute;
  width: 100%;
  transform: translateX(0);
  opacity: 1;
}

.screen-transition-exit-active {
  transform: translateX(-100%);
  opacity: 0;
  transition: transform var(--screen-transition-duration) var(--screen-transition-timing),
              opacity var(--screen-transition-duration) var(--screen-transition-timing);
}

/* 역방향 전환 */
.screen-transition-back-enter {
  position: absolute;
  width: 100%;
  transform: translateX(-100%);
  opacity: 0;
}

.screen-transition-back-enter-active {
  transform: translateX(0);
  opacity: 1;
  transition: transform var(--screen-transition-duration) var(--screen-transition-timing),
              opacity var(--screen-transition-duration) var(--screen-transition-timing);
}

.screen-transition-back-exit {
  position: absolute;
  width: 100%;
  transform: translateX(0);
  opacity: 1;
}

.screen-transition-back-exit-active {
  transform: translateX(100%);
  opacity: 0;
  transition: transform var(--screen-transition-duration) var(--screen-transition-timing),
              opacity var(--screen-transition-duration) var(--screen-transition-timing);
}

/* ======= 요소별 애니메이션 ======= */

/* 메시지 애니메이션 */
@keyframes messageAppear {
  from { 
    transform: translateY(20px) scale(0.96); 
    opacity: 0; 
  }
  to { 
    transform: translateY(0) scale(1); 
    opacity: 1; 
  }
}

.message-appear {
  animation: messageAppear var(--duration-400) var(--ease-out) forwards;
}

/* 자신의 메시지 애니메이션 */
@keyframes ownMessageAppear {
  from { 
    transform: translateY(10px) scale(0.98); 
    opacity: 0; 
  }
  to { 
    transform: translateY(0) scale(1); 
    opacity: 1; 
  }
}

.own-message-appear {
  animation: ownMessageAppear var(--duration-300) var(--ease-out) forwards;
}

/* 진행자 메시지 애니메이션 */
@keyframes moderatorMessageAppear {
  from { 
    transform: translateY(0) scale(0.95); 
    opacity: 0; 
  }
  35% {
    transform: translateY(-8px) scale(1.02);
  }
  to { 
    transform: translateY(0) scale(1); 
    opacity: 1; 
  }
}

.moderator-message-appear {
  animation: moderatorMessageAppear var(--duration-500) var(--ease-bounce) forwards;
}

/* 공지사항 애니메이션 */
@keyframes announcementAppear {
  from { 
    transform: translateY(-20px); 
    opacity: 0; 
  }
  to { 
    transform: translateY(0); 
    opacity: 1; 
  }
}

.announcement-appear {
  animation: announcementAppear var(--duration-500) var(--ease-bounce) forwards;
}

/* 번역 텍스트 애니메이션 */
@keyframes translationAppear {
  from { 
    height: 0;
    opacity: 0; 
  }
  to { 
    height: auto;
    opacity: 0.9; 
  }
}

.translation-appear {
  animation: translationAppear var(--duration-300) var(--ease-out) forwards;
}

/* ======= 버튼 및 상호작용 애니메이션 ======= */

/* 버튼 호버 효과 */
.button-hover-effect {
  transition: transform var(--duration-150) var(--ease-out),
              box-shadow var(--duration-200) var(--ease-out),
              background-color var(--duration-200) var(--ease-out);
}

.button-hover-effect:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.button-hover-effect:active {
  transform: translateY(1px);
  box-shadow: var(--shadow-sm);
}

/* 탭 버튼 효과 */
.tap-effect {
  transition: transform var(--duration-150) var(--ease-out);
}

.tap-effect:active {
  transform: scale(0.95);
}

/* 링크 호버 효과 */
.link-hover-effect {
  position: relative;
}

.link-hover-effect::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background-color: currentColor;
  transition: width var(--duration-300) var(--ease-out);
}

.link-hover-effect:hover::after {
  width: 100%;
}

/* 리플 효과 */
.ripple-effect {
  position: relative;
  overflow: hidden;
}

.ripple-effect .ripple {
  position: absolute;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.4);
  transform: scale(0);
  animation: ripple var(--duration-600) var(--ease-out);
  pointer-events: none;
}

@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

/* ======= 위치/방향 관련 애니메이션 ======= */

/* 펄스 애니메이션 */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.pulse {
  animation: pulse var(--duration-1000) var(--ease-in-out) infinite;
}

/* 진동 애니메이션 */
@keyframes vibrate {
  0% { transform: translateX(0); }
  25% { transform: translateX(-2px); }
  50% { transform: translateX(0); }
  75% { transform: translateX(2px); }
  100% { transform: translateX(0); }
}

.vibrate {
  animation: vibrate var(--duration-100) linear infinite;
}

/* 쉐이크 애니메이션 - 오류 표시 등에 사용 */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

.shake {
  animation: shake var(--duration-600) cubic-bezier(.36,.07,.19,.97) both;
}

/* 회전 애니메이션 */
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.rotate {
  animation: rotate var(--duration-1000) linear infinite;
}

/* 바운스 애니메이션 */
@keyframes bounce {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.bounce {
  animation: bounce var(--duration-1000) var(--ease-bounce) infinite;
}

/* ======= 특수 애니메이션 효과 ======= */

/* 로딩 스피너 */
@keyframes spinnerRotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(123, 64, 249, 0.2);
  border-top: 3px solid var(--primary-500);
  border-radius: 50%;
  animation: spinnerRotate 0.8s linear infinite;
}

/* 로딩 닷 애니메이션 */
@keyframes dotFlashing {
  0% { opacity: 0.2; }
  20% { opacity: 1; }
  100% { opacity: 0.2; }
}

.loading-dots span {
  animation: dotFlashing 1.4s infinite;
  animation-fill-mode: both;
}

.loading-dots span:nth-child(2) {
  animation-delay: 0.2s;
}

.loading-dots span:nth-child(3) {
  animation-delay: 0.4s;
}

/* 입력 포커스 효과 */
.focus-effect {
  position: relative;
}

.focus-effect::after {
  content: '';
  position: absolute;
  top: -3px;
  left: -3px;
  right: -3px;
  bottom: -3px;
  border-radius: calc(var(--radius-lg) + 3px);
  border: 0 solid var(--primary-500);
  opacity: 0;
  transition: border var(--duration-300) var(--ease-out),
              opacity var(--duration-300) var(--ease-out);
}

.focus-effect:focus-within::after {
  border: 2px solid var(--primary-500);
  opacity: 0.6;
}

/* 글자 타이핑 효과 */
@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-right-color: transparent }
  50% { border-right-color: var(--primary-500) }
}

.typing-effect {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  border-right: .15em solid var(--primary-500);
  animation: 
    typing 3.5s steps(40, end),
    blink-caret .75s step-end infinite;
}

/* 스크롤 다운 애니메이션 */
@keyframes scrollDown {
  0% { transform: translateY(-8px); opacity: 0; }
  50% { opacity: 1; }
  100% { transform: translateY(8px); opacity: 0; }
}

.scroll-down-arrow {
  animation: scrollDown 2s var(--ease-in-out) infinite;
}

/* 토스트 알림 애니메이션 */
@keyframes toastIn {
  0% { transform: translateY(100%); opacity: 0; }
  100% { transform: translateY(0); opacity: 1; }
}

@keyframes toastOut {
  0% { transform: translateY(0); opacity: 1; }
  100% { transform: translateY(100%); opacity: 0; }
}

.toast-in {
  animation: toastIn var(--duration-300) var(--ease-out) forwards;
}

.toast-out {
  animation: toastOut var(--duration-300) var(--ease-in) forwards;
}

/* ======= 접근성 관련 애니메이션 ======= */

/* 사용자의 모션 축소 설정 감지 및 존중 */
@media (prefers-reduced-motion: reduce) {
  *, ::before, ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .screen-transition-enter,
  .screen-transition-enter-active,
  .screen-transition-exit,
  .screen-transition-exit-active,
  .screen-transition-back-enter,
  .screen-transition-back-enter-active,
  .screen-transition-back-exit,
  .screen-transition-back-exit-active {
    transition: none !important;
  }
  
  .fade-in, .fade-out,
  .slide-in-right, .slide-out-right,
  .slide-in-left, .slide-out-left,
  .slide-in-up, .slide-out-down,
  .zoom-in, .zoom-out,
  .message-appear, .own-message-appear, .moderator-message-appear,
  .announcement-appear, .translation-appear,
  .pulse, .vibrate, .shake, .rotate, .bounce {
    animation: none !important;
  }
}
